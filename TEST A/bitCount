int bitCount(int x)
{
    // 基准情况：如果 x 为 0，返回 0
    int base_case = !x; // 如果 x 是 0，base_case 是 1；否则是 0
    int recursive_case = bitCount(x & (x - 1)); // 递归调用，清除最低有效位上的1
    
    // 返回结果：如果 x 是 0，返回 0；否则返回 1 + 递归结果
    return (base_case & 0) | ((!base_case) & (recursive_case + 1));
}
int bitCount(int x)
{
    // 基准情况：如果 x 为 0，返回 0
    int base_case = !x; // 如果 x 是 0，base_case 是 1；否则是 0
    int recursive_case = bitCount(x & (x - 1)); // 递归调用，清除最低有效位上的1
    
    // 返回结果：如果 x 是 0，返回 0；否则返回 1 + 递归结果
    return ((!base_case) & (recursive_case + 1));
}
int bitCount(int x)
{
    // 基准情况：如果 x 为 0，返回 0
    int base_case = !x; // 如果 x 是 0，base_case 是 1；否则是 0
    int recursive_case = bitCount(x & (x - 1)); // 递归调用，清除最低有效位上的1
    
    // 返回结果：如果 x 是 0，返回 0；否则返回 1 + 递归结果
    return ((!base_case) & (recursive_case + 1));
}



